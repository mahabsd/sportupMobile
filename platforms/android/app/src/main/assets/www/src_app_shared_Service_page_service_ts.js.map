{"version":3,"sources":["./src/app/shared/Service/page.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AAEI;AACV;IAMxB,WAAW,SAAX,WAAW;IAEtB,YAAoB,UAAwB;QAAxB,eAAU,GAAV,UAAU,CAAc;IAAI,CAAC;IACjD,YAAY,CAAC,EAAE;QACb,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAC,GAAG,gEAAoB,sBAAsB,EAAE,EAAE,CAAC;aACtD,IAAI,CAAC,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,OAAO,CAAC,IAAI;QACV,OAAO,IAAI,CAAC,UAAU;aACnB,IAAI,CAAC,GAAG,gEAAoB,EAAE,EAAE,IAAI,CAAC;aACrC,IAAI,CAAC,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,gEAAoB,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1E,CAAC;IAED,UAAU,CAAC,EAAO;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,gEAAoB,EAAE,GAAG,EAAE,CAAC,CAAC;IAChE,CAAC;IACD,UAAU,CAAC,EAAE;QACX,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAC,GAAG,gEAAoB,gBAAgB,EAAE,EAAE,CAAC;aAChD,IAAI,CAAC,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAC,GAAG,gEAAoB,SAAS,CAAC;aACrC,IAAI,CAAC,mDAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,eAAe,CAAC,IAAI;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,gEAAoB,EAAE,GAAI,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IACD,sBAAsB,CAAC,IAAI;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,gEAAoB,eAAe,EAAG,IAAI,CAAC,CAAC;IAC9E,CAAC;CACF;;YA5CQ,wDAAY;;AAOR,WAAW;IAHvB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAqCvB;AArCuB","file":"src_app_shared_Service_page_service_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UtilsService } from './utils.service';\nimport { map } from 'rxjs/operators';\nimport { Page } from '../Model/page';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageService {\n\n  constructor(private apiService: UtilsService) { }\n  getpagesbyID(id): Observable<Page[]> {\n    return this.apiService\n      .get(`${UtilsService.apiPage}/getAll/?createdBy=${id}`)\n      .pipe(map((res) => res.data.data));\n  }\n  addPage(Page): Observable<Page> {\n    return this.apiService\n      .post(`${UtilsService.apiPage}`, Page)\n      .pipe(map((res) => res));\n  }\n\n  updatepage(page) {\n    return this.apiService.put(`${UtilsService.apiPage}/${page._id}`, page);\n  }\n\n  deletepage(id: any) {\n    return this.apiService.delete(`${UtilsService.apiPage}` + id);\n  }\n  getOnePage(id): Observable<Page[]> {\n    return this.apiService\n      .get(`${UtilsService.apiPage}/getAll/?_id=${id}`)\n      .pipe(map((res) => res.data.data));\n  }\n  getAllPages(): Observable<Page[]> {\n    return this.apiService\n      .get(`${UtilsService.apiPage}/getAll`)\n      .pipe(map((res) => res));\n  }\n  updateCoverPage(page){\n    return this.apiService.patch(`${UtilsService.apiPage}` +  '/cover', page);\n  }\n  updateProfileImagePage(page){\n    return this.apiService.patch(`${UtilsService.apiPage}/imageProfile` , page);\n  }\n}\n\n"],"sourceRoot":"webpack:///"}